---
- hosts: sonar
  become: true
  tasks:
  - name: Install wget
    apt:
      name: wget
      state: present
      
  - name: Install unzip
    apt:
      name: unzip
      state: present

  - name: Install default-jdk
    apt:
      name: default-jdk
      state: present
      
  - name: Install nginx
    apt:
      name: nginx
      state: present
      
  - name: Start nginx service
    service:
      name: nginx
      state: started
      
  - name: Install python-psycopg2
    apt:
      name: python-psycopg2
      state: present
  
  - name: Create sonar user
    shell:
      cmd: useradd sonar
  
  - name: Create sonar user in databse
    become_user: postgres
    postgresql_user:
      name: sonar
      password: sonar
      role_attr_flags: CREATEDB,NOSUPERUSER
      
  - name: Create sonar database
    become_user: postgres
    postgresql_db:
      name: sonar
      owner: sonar
      
  - name: Create sonar directory
    file:
      path: "/opt/sonar"
      state: directory

  - name: Extract SonarQube
    unarchive:
      src: https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.0.zip
      dest: /opt/sonar/
      remote_src: yes
      
  - name: Link this version of sonarqube as the server SonarQube version
    file:
      src: "/opt/sonar/sonarqube-8.0"
      dest: "/opt/sonarqube"
      state: link
      owner: sonar
      
  - name: Configure SonarQube DB username
    lineinfile:
      path: "/opt/sonarqube/conf/sonar.properties"
      regexp: "^sonar.jdbc.username="
      insertafter: "^#sonar.jdbc.username="
      line: "sonar.jdbc.username=sonar"

  - name: Configure SonarQube DB password
    lineinfile:
      path: "/opt/sonarqube/conf/sonar.properties"
      regexp: "^sonar.jdbc.password="
      insertafter: "^#sonar.jdbc.password="
      line: "sonar.jdbc.password=sonar"

  - name: Configure SonarQube DB connection string
    lineinfile:
      path: "/opt/sonarqube/conf/sonar.properties"
      regexp: "sonar.jdbc.url=jdbc:postgresql://localhost/sonar"
      insertafter: "^#sonar.jdbc.url=jdbc:postgresql://localhost/sonar"
      line: "sonar.jdbc.url=jdbc:postgresql://localhost/sonar"
      
  - name: Configure SonarQube webport
    lineinfile:
      path: "/opt/sonarqube/conf/sonar.properties"
      regexp: "sonar.web.host=0.0.0.0"
      insertafter: "^#sonar.web.host=0.0.0.0"
      line: "sonar.web.host=127.0.0.1"

  - name: Configure SonarQube to run as the sonar user
    lineinfile:
      path: "/opt/sonarqube/bin/linux-x86-64/sonar.sh"
      regexp: "RUN_AS_USER=sonar"
      insertafter: "#RUN_AS_USER="
      line: "RUN_AS_USER=sonar"
      
  - name: Give permission to the sonar user
    become_user: root
    shell:
      cmd: chown -R sonar:sonar /opt/sonarqube
      
  - name: Copy sonar service to systemd
    copy:
      src: /home/ansadmin/playbook/sonarqube.service
      dest: /etc/systemd/system/
      
  - name: Start sonarqube service
    service:
      name: sonarqube
      state: started
      
  - name: Restart sonarqube service
    service:
      name: sonarqube
      state: restarted
      
  - name: Enable Firewall
    ufw:
     state: enabled
    
  - name: Allow Port 9000
    ufw:
     rule: allow
     port: '9000'
    
  - name: Allow OpenSSH
    ufw:
     rule: allow
     name: OpenSSH
      
  - name: copy nginx file
    copy: 
      src: /home/ansadmin/playbook/sonarqube
      dest: /etc/nginx/sites-enabled/
      
  - name: Restart nginx service
    service:
      name: nginx
      state: restarted
