---
- hosts: sonar
  become: true
  tasks:
  - name: Install wget
    apt:
      name: wget
      state: present
      
  - name: Install unzip
    apt:
      name: unzip
      state: present
  
  - name: Create sonar user
    user:
      name: sonar
  
  - name: Create sonar directory
    file:
      path: "/opt/sonar"
      state: directory

  - name: Extract SonarQube
    unarchive:
      src: https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.0.zip
      dest: /opt/sonar/
      remote_src: yes
      
  - name: Link this version of sonarqube as the server SonarQube version
    file:
      src: "/opt/sonar/sonarqube-8.0"
      dest: "/opt/sonarqube"
      state: link
      owner: sonar
      
  - name: Configure SonarQube DB username
    lineinfile:
      path: "/opt/sonarqube/conf/sonar.properties"
      regexp: "^sonar.jdbc.username="
      insertafter: "^#sonar.jdbc.username="
      line: "sonar.jdbc.username=sonar"

  - name: Configure SonarQube DB password
    lineinfile:
      path: "/opt/sonarqube/conf/sonar.properties"
      regexp: "^sonar.jdbc.password="
      insertafter: "^#sonar.jdbc.password="
      line: "sonar.jdbc.password=sonar"

  - name: Configure SonarQube DB connection string
    lineinfile:
      path: "/opt/sonarqube/conf/sonar.properties"
      regexp: "sonar.jdbc.url=jdbc:postgresql://localhost/sonar"
      insertafter: "^#sonar.jdbc.url=jdbc:postgresql://localhost/sonar"
      line: "sonar.jdbc.url=jdbc:postgresql://localhost/sonar"
      
  - name: Configure SonarQube webport
    lineinfile:
      path: "/opt/sonarqube/conf/sonar.properties"
      regexp: "sonar.web.host=0.0.0.0"
      insertafter: "^#sonar.web.host=0.0.0.0"
      line: "sonar.web.host=127.0.0.1"
   
  - name: Change javaOpts
    lineinfile:
      path: "/opt/sonarqube/conf/sonar.properties"
      regexp: "sonar.search.javaOpts="
      insertafter: "^#sonar.search.javaOpts="
      line: "sonar.search.javaOpts=-Xmx512m -Xms128m -XX:+HeapDumpOnOutOfMemoryError"

  - name: Configure SonarQube to run as the sonar user
    lineinfile:
      path: "/opt/sonarqube/bin/linux-x86-64/sonar.sh"
      regexp: "RUN_AS_USER=sonar"
      insertafter: "#RUN_AS_USER="
      line: "RUN_AS_USER=sonar"
      
  - name: Copy sonar service to systemd
    become: yes
    copy:
      src: /home/ansadmin/playbook/sonarqube.service
      dest: /etc/systemd/system/
      
  - name: Configure OS security limits for the sonar user
    become: yes
    template:
      src: "/home/ansadmin/playbook/sonarqube.limits"
      dest: "/etc/security/limits.d/99-sonarqube.conf"
      owner: sonar

  - name: Configure kernel level limits for ElasticSearch
    become: yes
    template:
      src: "/home/ansadmin/playbook/sonarqube.sysctl"
      dest: "/etc/sysctl.d/99-sonarqube.conf"
      owner: sonar

  - name: Enable the SonarQube service
    become: yes
    systemd:
      state: started
      enabled: yes
      daemon_reload: yes
      name: sonarqube
